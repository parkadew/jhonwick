:root {
    --brand-red: #ff0000;
    --brand-yellow: #edff22;
    --brand-green-lighter: #edff22;
    --gray-100:#eee;
    --gray-200:#eee;

}


header {
    
    position: fixed;
    width: 100%;
    /* 블럭 요소라 할지라도
    position:fixed 시 뷰포트 기준 전환 width를 지정해야만 화면을 끝까지 차지
    */
    height: 60px;
    background-color: var(--brand-red);
    z-index: 9999999999;
}

section {
    position: relative;
    padding-top: 60px;
    height: 50vh;
    background-color: var(--brand-green-lighter);
    z-index: 100;
    /*
    z-index의 범위는 새로운 요소의 추가 가능성을 고려하여 100 혹은 그 이상의 단위로 올려주는 것이 좋습니다.
    
    겹침 요소의 우선순위를 결정하는 값

    */
}

section > div { 
    position: absolute;
    /*좌 상단에 겹쳐서 올려지게 만듬*/
    width: 48px;
    height: 48px;
    background-color: var(--brand-red);
    color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;

}


section > div:first-of-type {
    top: 60px;
    left: 0;
    z-index: 2;
}
section > div:nth-of-type(2){
    bottom: 10%;
    right: 15%;
}

section > div:nth-of-type(3){
    top: 60px;
    left: 0;
    z-index: 1;
}


/*
1.기준 요소 relative --> body
2. 절대 위치 지정 -> 겹침 --> z-index
3. top left right bottom 을 통해서 기준요소에서 
어느 위치로 이동 시킬것인지 결정*/

main {
    display: flex;
    height: 300vh;
}

main > aside{ 
    position: sticky;
    top: 60px;
    height: calc(100vh - 60px);
    height: 100vh;
    width: 320px;
    background-color: aquamarine;
}
/* 특정 기준에 따라 (상단에 몇 px이 남았는가)
해당 기준을 만족하면 fixed 처럼 뷰포드에 의존하여 
스크롤과 상관없이 요소가 위치 

fixed 뷰포트가 기준
absolute 가장 가까운 부모 기준 



*/






